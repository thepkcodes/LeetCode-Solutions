Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

Solution:

Time Complexity: O(log m + log n)
Space Complexity: O(1)

CODE:

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i = 0;
        int j = matrix[0].size() - 1;
        
        while(i < matrix.size() && j >= 0) {
            if(target == matrix[i][j]) {
                return true;
            }
            else if(target < matrix[i][j]) {
                j--;
            }
            else {
                i++;
            }
        }
        return false;
    }
};
